{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "## 선형 회귀 기본 실습 답안"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "df = pd.read_csv('cars.csv')\n",
    "plt.scatter(df['speed'],df['dist'],color ='r',s=10)\n",
    "plt.xlabel('speed')\n",
    "plt.ylabel('dist')\n",
    "plt.show()\n",
    "# df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 1 차원 (단항, 피쳐 1개) 회귀 모형의 예측\n",
    "from sklearn.linear_model import LinearRegression\n",
    "lr = LinearRegression()\n",
    "\n",
    "# 입출력 데이터를 설정\n",
    "x = df['speed'].values.reshape(-1,1)   # 2차원, (n,1)\n",
    "y = df['dist'].values.reshape(-1,1)   # 2차원, (n,1)\n",
    "\n",
    "lr.fit(x,y)  # 회귀 모형 생성, 학습\n",
    "\n",
    "# 예측\n",
    "y_predicted = lr.predict(x)\n",
    "plt.scatter(x,y,color='r')\n",
    "plt.plot(x,y_predicted)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE: 15.068855995791377\n",
      "r2_score: 0.6510793807582509\n"
     ]
    }
   ],
   "source": [
    "# 적합도 측정, 검정\n",
    "# RMSE(Root Mean Squared Error), 평균 제곱근 오차, https://brunch.co.kr/@chris-song/34\n",
    "\n",
    "from sklearn.metrics import mean_squared_error\n",
    "\n",
    "mse  = mean_squared_error(y,lr.predict(x))\n",
    "rmse = np.sqrt(mse)\n",
    "print('RMSE:',rmse)     # 15.068855995791377\n",
    "\n",
    "from sklearn.metrics import r2_score\n",
    "\n",
    "r2  = r2_score(y,lr.predict(x))   \n",
    "print('r2_score:',r2)   # R-squared(결정계수), 회귀모형의 설명력을 표현하는 것. P-value와 같이 0과 1 사이의 값으로 나타나는데,\n",
    "                        # 0에 가까울수록 설명력이 낮고, 1에 가까울수록 높다고 해석할 수 있다\n",
    "                        # (예측값의 분산/실제값의 분산),   https://jihongl.github.io/2017/09/16/Rsquared/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
